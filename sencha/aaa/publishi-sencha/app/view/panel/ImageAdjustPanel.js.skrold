/*
 * File: app/view/panel/ImageAdjustPanel.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.panel.ImageAdjustPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.panel.imageadjustpanel',

    requires: [
        'RolandKioskPrint.view.panel.ImageAdjustPanelViewModel',
        'RolandKioskPrint.view.panel.ImageAdjustPanelViewController',
        'Ext.panel.Panel',
        'Ext.form.field.Checkbox',
        'Ext.slider.Single',
        'Ext.form.Label'
    ],

    controller: 'panel.imageadjustpanel',
    viewModel: {
        type: 'panel.imageadjustpanel'
    },
    height: 490,
    width: 800,
    header: false,

    layout: {
        type: 'vbox',
        align: 'center'
    },
    items: [
        {
            xtype: 'panel',
            margin: '0 50 20 140',
            header: false,
            layout: {
                type: 'hbox',
                align: 'bottom'
            },
            items: [
                {
                    xtype: 'component',
                    height: 402,
                    html: '<canvas />',
                    itemId: 'canvasContainer',
                    margin: '0 10 0 0',
                    style: 'border: 1px solid #7F7F7F;',
                    width: 602
                },
                {
                    xtype: 'checkboxfield',
                    localized: {
                        boxLabel: 'label.designer.inverseLabel'
                    },
                    disabled: true,
                    itemId: 'chkInverse',
                    boxLabel: 'INVERSE',
                    listeners: {
                        change: 'onChkInverseChange'
                    }
                }
            ],
            listeners: {
                afterrender: 'onCanvasPanelAfterRender'
            }
        },
        {
            xtype: 'panel',
            layout: 'hbox',
            header: false,
            items: [
                {
                    xtype: 'panel',
                    header: false,
                    layout: {
                        type: 'vbox',
                        align: 'center'
                    },
                    items: [
                        {
                            xtype: 'slider',
                            disabled: true,
                            itemId: 'thresholdSlider',
                            width: 300,
                            value: 128,
                            maxValue: 255,
                            listeners: {
                                change: 'onThresholdSliderChange',
                                changecomplete: 'onThresholdSliderChangeComplete'
                            }
                        },
                        {
                            xtype: 'label',
                            localized: {
                                text: 'label.designer.thresholdLabel'
                            },
                            text: 'THRESHOLD'
                        }
                    ]
                }
            ]
        }
    ]

});