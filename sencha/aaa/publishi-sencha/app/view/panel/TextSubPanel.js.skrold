/*
 * File: app/view/panel/TextSubPanel.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.panel.TextSubPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.panel.textsubpanel',

    requires: [
        'RolandKioskPrint.view.panel.TextSubPanelViewModel',
        'RolandKioskPrint.view.panel.TextSubPanelViewController',
        'RolandKioskPrint.view.button.ToolPanelButton',
        'Ext.form.field.TextArea',
        'Ext.form.field.Checkbox',
        'Ext.panel.Panel',
        'Ext.form.Label',
        'Ext.slider.Single',
        'Ext.button.Button',
        'Ext.form.field.ComboBox'
    ],

    controller: 'panel.textsubpanel',
    viewModel: {
        type: 'panel.textsubpanel'
    },
    bodyStyle: 'background-color: transparent;',
    header: false,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'textareafield',
            localized: {
                emptyText: 'label.designer.textAreaEmptyText'
            },
            height: 140,
            itemId: 'txtArea',
            fieldCls: 'toolpanel-text-area',
            emptyText: 'Type your text here...',
            listeners: {
                change: 'onTextAreaChange',
                focusleave: 'onTextAreaFocusLeave'
            }
        },
        {
            xtype: 'checkboxfield',
            localized: {
                boxLabel: 'label.designer.curvedText'
            },
            reference: 'chkCurvedText',
            cls: 'toolpanel-checkbox',
            itemId: 'chkCurvedText',
            margin: '-5 0 -5 0',
            hideEmptyLabel: false,
            hideLabel: true,
            boxLabel: 'CURVED TEXT',
            checked: true,
            listeners: {
                change: 'onTextTypeChange'
            }
        },
        {
            xtype: 'panel',
            margin: '10 0 0 0',
            bodyStyle: 'background-color: transparent;',
            header: false,
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            bind: {
                hidden: '{!chkCurvedText.checked}'
            },
            items: [
                {
                    xtype: 'label',
                    localized: {
                        text: 'label.designer.curvedTextRadius'
                    },
                    cls: 'toolpanel-label',
                    text: 'RADIUS',
                    bind: {
                        disabled: '{curvedTextRadiusDisabled}'
                    }
                },
                {
                    xtype: 'slider',
                    itemId: 'radiusSlider',
                    margin: '0 5 0 5',
                    bind: {
                        disabled: '{curvedTextRadiusDisabled}',
                        value: '{curvedTextRadius}'
                    },
                    listeners: {
                        change: 'onRadiusSliderChange',
                        dragend: 'onRadiusSliderDragEnd'
                    }
                },
                {
                    xtype: 'label',
                    localized: {
                        text: 'label.designer.curvedTextPlacement'
                    },
                    cls: 'toolpanel-label',
                    margin: '10 0 0 0',
                    text: 'ARRANGEMENT',
                    bind: {
                        disabled: '{placementDisabled}'
                    }
                },
                {
                    xtype: 'panel',
                    border: false,
                    bodyStyle: 'background-color: transparent;',
                    header: false,
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'button.toolpanelbutton',
                            cls: 'img-curved-text-outside',
                            margin: '0 15 0 0',
                            allowDepress: false,
                            flex: 1,
                            bind: {
                                disabled: '{placementDisabled}',
                                pressed: '{outsideCurvedPressed}'
                            },
                            listeners: {
                                click: 'onOutsideCurvedButtonClick'
                            }
                        },
                        {
                            xtype: 'button.toolpanelbutton',
                            cls: 'img-curved-text-inside',
                            margin: '0 15 0 0',
                            allowDepress: false,
                            flex: 1,
                            bind: {
                                disabled: '{placementDisabled}',
                                pressed: '{insideCurvedPressed}'
                            },
                            listeners: {
                                click: 'onInsideCurvedButtonClick'
                            }
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'label',
            localized: {
                text: 'label.designer.fontLabel'
            },
            cls: 'toolpanel-label',
            itemId: 'lblFont',
            margin: '10 0 0 0',
            text: 'FONT'
        },
        {
            xtype: 'combobox',
            tpl: '<tpl for="."><div style="font-family: \'{familyName}\';font-size: 1.5em" class="x-boundlist-item">{familyName}</div></tpl>',
            localized: {
                emptyText: 'label.designer.fontComboEmptyText'
            },
            itemId: 'cboFonts',
            fieldCls: 'toolpanel-combo-box',
            editable: false,
            emptyText: '-- Select font --',
            triggerCls: 'toolpanel-combo-box',
            displayField: 'familyName',
            queryMode: 'local',
            store: 'Fonts',
            valueField: 'familyName',
            listeners: {
                change: 'onFontComboChange'
            }
        },
        {
            xtype: 'label',
            localized: {
                text: 'label.designer.styleLabel'
            },
            cls: 'toolpanel-label',
            margin: '5 0 0 0',
            text: 'STYLE',
            bind: {
                disabled: '{boldDisabled && italicDisabled && underlineDisabled}'
            }
        },
        {
            xtype: 'panel',
            border: false,
            layout: 'hbox',
            bodyStyle: 'background-color: transparent;',
            header: false,
            items: [
                {
                    xtype: 'button.toolpanelbutton',
                    cls: 'fa-bold',
                    itemId: 'btnFontStyleBold',
                    margin: '0 15 0 0',
                    bind: {
                        disabled: '{boldDisabled}'
                    },
                    listeners: {
                        click: 'onFontStyleBoldButtonClick'
                    }
                },
                {
                    xtype: 'button.toolpanelbutton',
                    cls: 'fa-italic',
                    itemId: 'btnFontStyleItalic',
                    margin: '0 15 0 0',
                    bind: {
                        disabled: '{italicDisabled}'
                    },
                    listeners: {
                        click: 'onFontStyleItalicButtonClick'
                    }
                },
                {
                    xtype: 'button.toolpanelbutton',
                    cls: 'fa-underline',
                    itemId: 'btnFontStyleUnderline',
                    bind: {
                        disabled: '{underlineDisabled}'
                    },
                    listeners: {
                        click: 'onFontStyleUnderlineButtonClick'
                    }
                }
            ]
        },
        {
            xtype: 'label',
            localized: {
                text: 'label.designer.alignmentLabel'
            },
            cls: 'toolpanel-label',
            margin: '10 0 0 0',
            text: 'ALIGNMENT',
            bind: {
                disabled: '{textAlignmentDisabled}'
            }
        },
        {
            xtype: 'panel',
            border: false,
            bodyStyle: 'background-color: transparent;',
            header: false,
            title: 'pnlAlignText',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'button.toolpanelbutton',
                    cls: 'fa-align-left',
                    itemId: 'btnAlignLeft',
                    margin: '0 15 0 0',
                    allowDepress: false,
                    flex: 1,
                    bind: {
                        disabled: '{textAlignmentDisabled}',
                        pressed: '{textAlignLeftPressed}'
                    },
                    listeners: {
                        click: 'onAlignLeftButtonClick'
                    }
                },
                {
                    xtype: 'button.toolpanelbutton',
                    cls: 'fa-align-center',
                    itemId: 'btnAlignCenter',
                    margin: '0 15 0 0',
                    allowDepress: false,
                    flex: 1,
                    bind: {
                        disabled: '{textAlignmentDisabled}',
                        pressed: '{textAlignCenterPressed}'
                    },
                    listeners: {
                        click: 'onAlignCenterButtonClick'
                    }
                },
                {
                    xtype: 'button.toolpanelbutton',
                    cls: 'fa-align-right',
                    itemId: 'btnAlignRight',
                    allowDepress: false,
                    flex: 1,
                    bind: {
                        disabled: '{textAlignmentDisabled}',
                        pressed: '{textAlignRightPressed}'
                    },
                    listeners: {
                        click: 'onAlignRightButtonClick'
                    }
                }
            ]
        }
    ],
    listeners: {
        afterrender: 'onPanelAfterRender'
    }

});