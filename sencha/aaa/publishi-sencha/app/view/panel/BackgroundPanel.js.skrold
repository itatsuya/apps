/*
 * File: app/view/panel/BackgroundPanel.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.panel.BackgroundPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.panel.backgroundpanel',

    requires: [
        'RolandKioskPrint.view.panel.BackgroundPanelViewModel',
        'RolandKioskPrint.view.panel.BackgroundPanelViewController',
        'RolandKioskPrint.view.button.ToolPanelButton',
        'Ext.form.field.Checkbox',
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.form.Label',
        'Ext.view.View',
        'Ext.XTemplate'
    ],

    controller: 'panel.backgroundpanel',
    viewModel: {
        type: 'panel.backgroundpanel'
    },
    border: false,
    minHeight: 330,
    width: 200,
    bodyStyle: 'background-color: transparent;',
    header: false,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'checkboxfield',
            localized: {
                boxLabel: 'label.designer.userBackgroundLabel',
                
            },
            reference: 'chkUserBackground',
            cls: [
                'chk-user-cut-paths',
                'toolpanel-checkbox'
            ],
            itemId: 'chkUserBackground',
            margin: '10 20 0 20',
            boxLabel: 'Enable for<br>cotodesign Client',
            uncheckedValue: 'off',
            bind: {
                hidden: '{!userBackgroundEditable}',
                value: '{userBackgroundTF}'
            }
        },
        {
            xtype: 'checkboxfield',
            localized: {
                boxLabel: 'label.designer.userBackgroundShowGrid',
                
            },
            cls: 'toolpanel-checkbox',
            itemId: 'chkUserShowGrid',
            margin: '10 20 10 20',
            boxLabel: 'Show Grid',
            uncheckedValue: 'off',
            bind: {
                disabled: '{!chkUserBackground.checked}',
                hidden: '{!userBackgroundEditable}'
            },
            listeners: {
                change: 'onChkUserShowGridChange',
                disable: 'onChkUserShowGridDisable'
            }
        },
        {
            xtype: 'tabpanel',
            flex: 1,
            cls: 'tab-panel',
            itemId: 'tabPanel',
            bodyStyle: 'background-color: transparent;',
            activeTab: 0,
            items: [
                {
                    xtype: 'panel',
                    localized: {
                        title: 'label.designer.imageTool'
                    },
                    title: 'IMAGE',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    tabConfig: {
                        xtype: 'tab',
                        flex: 1
                    },
                    items: [
                        {
                            xtype: 'panel',
                            height: 71,
                            padding: 10,
                            style: 'border-bottom: solid 1px rgb(181, 183, 187);',
                            bodyStyle: 'background-color: transparent;',
                            header: false,
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'button.toolpanelbutton',
                                    localized: {
                                        tooltip: 'label.designer.uploadImageToolTip'
                                    },
                                    cls: 'fa-upload',
                                    margin: '0 15 0 0',
                                    width: 115,
                                    enableToggle: false,
                                    iconAlign: 'top',
                                    tooltip: 'Upload image',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: 'onUploadButtonClick'
                                    }
                                },
                                {
                                    xtype: 'button.toolpanelbutton',
                                    localized: {
                                        tooltip: 'label.designer.refreshImageToolTip'
                                    },
                                    cls: 'fa-repeat',
                                    enableToggle: false,
                                    tooltip: 'Refresh',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: 'onRefreshButtonClick'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'label',
                            localized: {
                                text: 'label.designer.backgroundGridTipText'
                            },
                            cls: 'toolpanel-label',
                            hidden: true,
                            itemId: 'lblBackgroundGrid',
                            margin: '10 10 0 10',
                            padding: '0 5 0 5',
                            text: '*Thin grid size is 5mm and thick one is 25mm.'
                        },
                        {
                            xtype: 'dataview',
                            flex: 1,
                            itemId: 'imgView',
                            margin: '10 10 10 10',
                            scrollable: 'vertical',
                            itemSelector: 'div.image-item-thumb-wrap',
                            itemTpl: Ext.create('Ext.XTemplate', 
                                '<tpl if="thumbPath != \'\'">',
                                '    <div class="image-item-thumb-wrap {[xindex % 2 === 0 ? \'image-item-thumb-wrap-even\' : \'image-item-thumb-wrap-odd\']}">',
                                '        <div class="image-item-thumb" style="background-image: url(\'{[this.getURLWithNonce(values.thumbPath)]}\')"></div>',
                                '    </div>',
                                '<tpl else>',
                                '    <div class="image-item-text-wrap">',
                                '        <ul>',
                                '            <li>{[this.getDisclaimerString2()]}</li>',
                                '        </ul>',
                                '    </div>',
                                '</tpl>',
                                {
                                    getDisclaimerString2: function() {
                                        return RolandKioskPrint.app.getString('message.designer.imgUploadDisclaimerStr2');
                                    },
                                    getURLWithNonce: function(url) {
                                        return RolandKioskPrint.AppData.getURLWithNonce(url);
                                    }
                                }
                            ),
                            store: 'BackgroundImages',
                            listeners: {
                                itemclick: 'onImgViewItemClick'
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    localized: {
                        title: 'label.designer.colorTool'
                    },
                    title: 'COLOR',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    tabConfig: {
                        xtype: 'tab',
                        flex: 1,
                        itemId: 'colorTab',
                        margin: '0 0 0 -4'
                    },
                    items: [
                        {
                            xtype: 'dataview',
                            cls: [
                                'toolpanel-color-view',
                                'background-color-view'
                            ],
                            flex: 1,
                            itemId: 'colorView',
                            margin: 10,
                            scrollable: 'vertical',
                            itemSelector: 'a.color-item-thumb-wrap',
                            itemTpl: [
                                '<tpl if="colorValue == \'None\'">',
                                '    <a href=\'#\' class="color-item-thumb-wrap">',
                                '        <img class="nocolor"/>',
                                '    </a>',
                                '<tpl else>',
                                '    <a href=\'#\' class="color-item-thumb-wrap">',
                                '        <span style=\'background-color: {colorValue}\'>&nbsp;</span>',
                                '    </a>',
                                '</tpl>'
                            ],
                            store: 'BackgroundColors',
                            listeners: {
                                containerclick: 'onColorViewContainerClick',
                                itemclick: 'onColorViewItemClick'
                            }
                        },
                        {
                            xtype: 'button.toolpanelbutton',
                            localized: {
                                text: 'label.designer.backToDefaultBackColor'
                            },
                            height: 40,
                            itemId: 'btnBackToDefault',
                            margin: 10,
                            enableToggle: false,
                            text: 'Back to default',
                            listeners: {
                                click: 'onBackToDefaultButtonClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        afterrender: 'onPanelAfterRender',
        show: 'onPanelShow',
        hide: 'onPanelHide'
    }

});