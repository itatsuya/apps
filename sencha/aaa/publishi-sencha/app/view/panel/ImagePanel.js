/*
 * File: app/view/panel/ImagePanel.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.panel.ImagePanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.panel.imagepanel',

    requires: [
        'RolandKioskPrint.view.panel.ImagePanelViewModel',
        'RolandKioskPrint.view.panel.ImagePanelViewController',
        'RolandKioskPrint.view.button.ToolPanelButton',
        'Ext.form.Label',
        'Ext.form.field.ComboBox',
        'Ext.form.Panel',
        'Ext.button.Button',
        'Ext.view.View',
        'Ext.XTemplate'
    ],

    controller: 'panel.imagepanel',
    viewModel: {
        type: 'panel.imagepanel'
    },
    minHeight: 330,
    padding: '10 0 10 0',
    scrollable: 'vertical',
    style: 'font-weight: bold',
    width: 200,
    bodyStyle: 'background-color: transparent
',
    header: false,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'label',
            localized: {
                text: 'label.designer.categoryLabel'
            },
            cls: 'toolpanel-label',
            margin: '0 10 0 10',
            text: 'CATEGORY'
        },
        {
            xtype: 'combobox',
            itemId: 'cboImgCategories',
            margin: '0 10 0 10',
            fieldCls: 'toolpanel-combo-box',
            editable: false,
            triggerCls: 'toolpanel-combo-box',
            displayField: 'categoryName',
            store: 'ImageCategories',
            valueField: 'categoryName',
            listeners: {
                change: 'onCboImgCategoriesChange'
            }
        },
        {
            xtype: 'form',
            border: false,
            height: 71,
            itemId: 'frmUploadImage',
            padding: 10,
            style: 'border-bottom: solid 1px rgb(181, 183, 187)
 border-top: solid 1px rgb(181, 183, 187); margin-top: 10px;',
            bodyStyle: 'background-color: transparent
',
            header: false,
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'button.toolpanelbutton',
                    localized: {
                        tooltip: 'label.designer.uploadImageToolTip'
                    },
                    cls: 'fa-upload',
                    margin: '0 15 0 0',
                    width: 115,
                    enableToggle: false,
                    iconAlign: 'top',
                    tooltip: 'Upload image',
                    tooltipType: 'title',
                    listeners: {
                        click: 'onUploadButtonClick'
                    }
                },
                {
                    xtype: 'button.toolpanelbutton',
                    localized: {
                        tooltip: 'label.designer.refreshImageToolTip'
                    },
                    cls: 'fa-repeat',
                    enableToggle: false,
                    tooltip: 'Refresh',
                    tooltipType: 'title',
                    listeners: {
                        click: 'onRefreshButtonClick'
                    }
                }
            ]
        },
        {
            xtype: 'dataview',
            flex: 1,
            itemId: 'imgView',
            margin: '10 10 0 10',
            scrollable: 'vertical',
            style: 'background-color: transparent
',
            itemSelector: 'div.image-item-thumb-wrap',
            itemTpl: Ext.create('Ext.XTemplate', 
                '<tpl if="thumbPath != \'\'">',
                '    <div class="image-item-thumb-wrap {[xindex % 2 === 0 ? \'image-item-thumb-wrap-even\' : \'image-item-thumb-wrap-odd\']}">',
                '        <img class="lozad image-item-thumb" data-src="{[this.getURLWithNonce(values.thumbPath)]}" />',
                '    </div>',
                '<tpl else>',
                '    <div class="image-item-text-wrap">',
                '        <ul>',
                '            <li>{[this.getDisclaimerString2()]}</li>',
                '        </ul>',
                '    </div>',
                '</tpl>',
                {
                    getDisclaimerString2: function() {
                        return RolandKioskPrint.app.getString('message.designer.imgUploadDisclaimerStr2')

                    },
                    getURLWithNonce: function(url) {
                        return RolandKioskPrint.AppData.getURLWithNonce(url)

                    }
                }
            ),
            store: 'Images',
            listeners: {
                itemclick: 'onImgViewItemClick',
                refresh: 'onImgViewRefresh'
            }
        }
    ],
    listeners: {
        show: 'onPanelShow',
        beforerender: 'onPanelBeforeRender'
    }

})
