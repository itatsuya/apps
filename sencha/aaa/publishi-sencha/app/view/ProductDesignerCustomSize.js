/*
 * File: app/view/ProductDesignerCustomSize.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.ProductDesignerCustomSize', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.productdesignercustomsize',

    requires: [
        'RolandKioskPrint.view.ProductDesignerCustomSizeViewModel',
        'RolandKioskPrint.view.ProductDesignerCustomSizeViewController',
        'RolandKioskPrint.view.panel.NavPanel',
        'RolandKioskPrint.view.panel.ProductSizeImagePanel',
        'RolandKioskPrint.view.panel.ProductSizeInputPanel',
        'RolandKioskPrint.view.button.CommandButton',
        'RolandKioskPrint.view.button.DefaultCommandButton',
        'Ext.panel.Panel',
        'Ext.form.Label',
        'Ext.button.Button'
    ],

    controller: 'productdesignercustomsize',
    viewModel: {
        type: 'productdesignercustomsize'
    },
    cls: 'pd-custom',
    layout: 'fit',
    header: false,

    dockedItems: [
        {
            xtype: 'panel.navpanel',
            dock: 'top',
            itemId: 'navPanel'
        },
        {
            xtype: 'label',
            localized: {
                text: 'label.pd.customSizeTitle'
            },
            cls: 'new-product-form-top-label',
            dock: 'top',
            height: 30,
            text: 'Please input a numerical value'
        }
    ],
    items: [
        {
            xtype: 'container',
            height: 518,
            minHeight: 500,
            minWidth: 700,
            width: 815,
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'panel.productsizeimagepanel',
                    itemId: 'productSizeImagePanel',
                    margin: '20 0 20 20',
                    flex: 1
                },
                {
                    xtype: 'panel',
                    margin: '0 40 0 40',
                    width: 320,
                    bodyStyle: 'background-color: transparent
',
                    header: false,
                    layout: {
                        type: 'vbox',
                        align: 'stretch',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'panel.productsizeinputpanel',
                            itemId: 'productSizeInputPanel',
                            bodyStyle: 'background-color: transparent
',
                            flex: 1
                        },
                        {
                            xtype: 'panel',
                            margin: '15 0 20 0',
                            bodyStyle: 'background-color: transparent
',
                            frameHeader: false,
                            header: false,
                            items: [
                                {
                                    xtype: 'button.commandbutton',
                                    localized: {
                                        text: 'label.button.back'
                                    },
                                    margin: '0 10 0 0',
                                    text: 'BACK',
                                    listeners: {
                                        click: 'onBackButtonClick'
                                    }
                                },
                                {
                                    xtype: 'button.defaultcommandbutton',
                                    localized: {
                                        text: 'label.button.next'
                                    },
                                    text: 'NEXT',
                                    listeners: {
                                        click: 'onNextButtonClick'
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        show: 'onMainViewShow',
        beforeshow: 'onMainViewBeforeShow',
        afterrender: 'onMainViewAfterRender'
    }

})
