/*
 * File: app/view/LoginFormViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.LoginFormViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.loginform',

    onEnter: function() {
        this.getView().down('button').click();
    },

    onKeydown: function(event, passwordField) {
        if (!this.showCapsLockWarning) {
            return;
        }

        var capsLockOn = event.getModifierState && event.getModifierState('CapsLock');
        var lblErrorMsg = this.getView().down('#lblErrorMsg');

        if (passwordField) {
            if (capsLockOn) {
                lblErrorMsg.setValue(RolandKioskPrint.app.getString('message.generic.capsLockON'));
            } else {
                lblErrorMsg.reset();
            }
            return;
        }

        // Clear the caps lock ON warning if caps lock is turned OFF.
        if (event.keyCode === 20 && !capsLockOn &&
            lblErrorMsg.getValue() === RolandKioskPrint.app.getString('message.generic.capsLockON')) {
            lblErrorMsg.reset();
        }
    },

    onPasswordFieldKeydown: function(textfield, e, eOpts) {
        if (e.getKey() == e.ENTER) {
            this.onEnter();
            return;
        }

        this.onKeydown(e.event, textfield);
    },

    onLoginPanelShow: function(component, eOpts) {
        var viewModelData = this.getViewModel().getData();
        if (!viewModelData || !viewModelData.nextView) {
            this.getViewModel().setData({
                nextView : '#template/main'
            });
        }

        var txtUserName = this.getView().down('#txtUserName');
        txtUserName.focus();

        if (this.showCapsLockWarning) {
            document.addEventListener('keydown', this.keyDownHandler);
        }
    },

    onLoginPanelAfterRender: function(component, eOpts) {
        this.showCapsLockWarning = (Ext.os.deviceType != 'Tablet' && Ext.os.deviceType != 'Phone');
        var me = this;
        this.keyDownHandler = function(event) {
            me.onKeydown(event);
        };
    },

    onLoginPanelHide: function(component, eOpts) {
        if (this.showCapsLockWarning) {
            document.removeEventListener('keydown', this.keyDownHandler);
        }
    }

});
