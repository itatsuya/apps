/*
 * File: app/view/ProductModelDesignerImageAdjustViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.ProductModelDesignerImageAdjustViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.productmodeldesignerimageadjust',

    disableRevertChanges: function(disable) {
        this.getView().down('#btnRevert').setDisabled(disable);
    },

    onRevertButtonClick: function(button, e, eOpts) {
        var imageAdjustPanel = this.getView().down('#imageAdjustPanel');
        imageAdjustPanel.getController().revertChanges();
    },

    onCancelButtonClick: function(button, e, eOpts) {
        RolandKioskPrint.app.destroyModalView(this.getView());
    },

    onOKButtonClick: function(button, e, eOpts) {
        var imageAdjustPanel = this.getView().down('#imageAdjustPanel');

        var imageAdjustData = imageAdjustPanel.getController().getImageAdjustData();
        imageAdjustData.clientView = false;
        this.fireEvent('imageAdjustPanelClosed', imageAdjustData);

        RolandKioskPrint.app.destroyModalView(this.getView());
    },

    onPanelBeforeShow: function(component, eOpts) {
        // Set the image adjust data on the child panel.
        var data = this.getViewModel().getData();
        var imageAdjustPanel = this.getView().down('#imageAdjustPanel');

        imageAdjustPanel.getController().setImageAdjustData({
            parentFilePath: data.parentFilePath,
            threshold: data.threshold,
            invert: data.invert,
            left: data.left,
            top: data.top,
            width: data.width,
            height: data.height,
            origWidth: data.origWidth,
            origHeight: data.origHeight,
            parentView: this.getView()
        });
    }

});
