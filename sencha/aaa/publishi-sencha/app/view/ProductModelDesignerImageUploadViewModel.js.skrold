/*
 * File: app/view/ProductModelDesignerImageUploadViewModel.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.ProductModelDesignerImageUploadViewModel', {
    extend: 'Ext.app.ViewModel',
    alias: 'viewmodel.productmodeldesignerimageupload',

    requires: [
        'Ext.app.bind.Formula'
    ],

    formulas: {
        labelString: function(get) {
            var screenType = get('screenType');
            if (screenType == 'uploadMethodSelection') {
                return RolandKioskPrint.app.getString('label.designer.importMethodSelectionTitle');
            }else if (screenType == 'networkSettingsQRCode') {
                return RolandKioskPrint.app.getString('label.designer.networkQRCodeTitle');
            } else if (screenType == 'uploadURLQRCode') {
                return RolandKioskPrint.app.getString('label.designer.uploadQRCodeTitle');
            }
        },
        nextCloseBtnText: function(get) {
            var screenType = get('screenType');
            if (screenType == 'networkSettingsQRCode') {
                return RolandKioskPrint.app.getString('label.button.next');
            } else if (screenType == 'uploadURLQRCode') {
                return RolandKioskPrint.app.getString('label.button.close');
            }
        },
        closeBackBtnText: function(get) {
            var screenType = get('screenType');
            if (screenType == 'uploadMethodSelection') {
                return RolandKioskPrint.app.getString('label.button.close');
            } else if (screenType == 'networkSettingsQRCode') {
                return RolandKioskPrint.app.getString('label.button.back');
            }
        }
    }

});