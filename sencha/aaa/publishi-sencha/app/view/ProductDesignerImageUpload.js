/*
 * File: app/view/ProductDesignerImageUpload.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.ProductDesignerImageUpload', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.productdesignerimageupload',

    requires: [
        'RolandKioskPrint.view.ProductDesignerImageUploadViewModel',
        'RolandKioskPrint.view.ProductDesignerImageUploadViewController',
        'RolandKioskPrint.view.panel.ImageUploadPanel',
        'RolandKioskPrint.view.button.CommandButton',
        'RolandKioskPrint.view.button.DefaultCommandButton',
        'Ext.form.Label',
        'Ext.panel.Panel',
        'Ext.button.Button'
    ],

    controller: 'productdesignerimageupload',
    viewModel: {
        type: 'productdesignerimageupload'
    },
    modal: true,
    floating: true,
    height: 400,
    width: 600,
    header: false,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'label',
            cls: 'order-form-top-label',
            height: 30,
            bind: {
                text: '{labelString}'
            }
        },
        {
            xtype: 'container',
            flex: 1,
            margin: '40 0 0 0',
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'panel.imageuploadpanel',
                    flex: 0.9
                },
                {
                    xtype: 'panel',
                    flex: 0.1,
                    margin: '0 10 20 0',
                    maxHeight: 30,
                    header: false,
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button.commandbutton',
                            itemId: 'btnCloseBack',
                            margin: '0 10 0 0',
                            minWidth: 90,
                            bind: {
                                text: '{closeBackBtnText}'
                            },
                            listeners: {
                                click: 'onCloseBackButtonClick'
                            }
                        },
                        {
                            xtype: 'button.defaultcommandbutton',
                            hidden: true,
                            itemId: 'btnNextClose',
                            margin: '0 10 0 0',
                            minWidth: 120,
                            bind: {
                                text: '{nextCloseBtnText}'
                            },
                            listeners: {
                                click: 'onNextCloseButtonClick'
                            }
                        }
                    ]
                }
            ]
        }
    ]

})
