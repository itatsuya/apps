/*
 * File: app/view/ModelLayoutDesignerSave.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.ModelLayoutDesignerSave', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.modellayoutdesignersave',

    requires: [
        'RolandKioskPrint.view.ModelLayoutDesignerSaveViewModel',
        'RolandKioskPrint.view.ModelLayoutDesignerSaveViewController',
        'RolandKioskPrint.view.button.ActionButton',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.selection.RowModel',
        'Ext.form.field.Text',
        'Ext.button.Button'
    ],

    config: {
        localized: {
            title: 'label.generic.save'
        }
    },

    controller: 'modellayoutdesignersave',
    viewModel: {
        type: 'modellayoutdesignersave'
    },
    modal: true,
    cls: 'pmd-mld-form',
    floating: true,
    height: 478,
    width: 586,
    bodyStyle: 'background-color: rgb(206, 207, 209)
',
    title: 'SAVE',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    dockedItems: [
        {
            xtype: 'panel',
            cls: 'separator-bar',
            dock: 'top',
            height: 10,
            header: false
        }
    ],
    items: [
        {
            xtype: 'panel',
            cls: 'pmd-mld-form-content-panel',
            flex: 1,
            header: false,
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'gridpanel',
                    cls: [
                        'pmd-mld-grid-panel',
                        'noborder-trl'
                    ],
                    height: 320,
                    itemId: 'modelLayoutList',
                    header: false,
                    enableColumnHide: false,
                    enableColumnMove: false,
                    enableColumnResize: false,
                    sortableColumns: false,
                    store: 'ModelLayouts',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            localized: {
                                text: 'label.generic.name'
                            },
                            flex: 1,
                            dataIndex: 'layoutName',
                            text: 'NAME'
                        }
                    ],
                    listeners: {
                        select: 'onModelLayoutListSelect'
                    },
                    selModel: {
                        selType: 'rowmodel',
                        mode: 'SINGLE'
                    }
                },
                {
                    xtype: 'panel',
                    margin: '10 0 10 0',
                    header: false,
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'center',
                        padding: '0 100 0 0'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            validator: function(value) {
                                value = value.trim()

                                if (!value) {
                                    return true
 // Let allowBlank handle it
                                }

                                // Check for disallowed characters in file name.
                                var invalidChars = "\\/:*?\"<>|,"

                                for (var i = 0, length = value.length
 i < length; i++) {
                                    var nameChar = value.charAt(i)

                                    if (invalidChars.indexOf(nameChar) != -1) {
                                        return RolandKioskPrint.app.getString('message.pmd_mld.nameInvalidChars')

                                    }
                                }

                                return true

                            },
                            localized: {
                                fieldLabel: 'label.generic.fileName',
                                blankText: 'message.generic.blankValue',
                                maxLengthText: 'message.generic.maxLength'
                            },
                            itemId: 'txtModelLayoutName',
                            width: 475,
                            fieldLabel: 'FILE NAME',
                            labelAlign: 'right',
                            labelClsExtra: 'model-layout-name-label',
                            labelPad: 15,
                            labelWidth: 190,
                            fieldCls: 'grey-bg',
                            allowBlank: false,
                            allowOnlyWhitespace: false
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    margin: '5 0 10 0',
                    header: false,
                    layout: {
                        type: 'hbox',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button.actionbutton',
                            localized: {
                                text: 'label.button.cancel'
                            },
                            height: 33,
                            margin: '0 0 0 20',
                            width: 127,
                            text: 'CANCEL',
                            listeners: {
                                click: 'onCancelButtonClick'
                            }
                        },
                        {
                            xtype: 'button.actionbutton',
                            localized: {
                                text: 'label.button.save'
                            },
                            height: 33,
                            margin: '0 0 0 20',
                            width: 127,
                            text: 'SAVE',
                            listeners: {
                                click: 'onSaveButtonClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        show: 'onPanelShow'
    }

})
