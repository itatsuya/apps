/*
 * File: app/view/field/NumberField.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RolandKioskPrint.view.field.NumberField', {
    extend: 'Ext.form.field.Number',
    alias: 'widget.field.numberfield',

    requires: [
        'RolandKioskPrint.view.field.NumberFieldViewModel',
        'RolandKioskPrint.view.field.NumberFieldViewController'
    ],

    config: {
        localized: {
            blankText: 'message.generic.blankValue'
        }
    },

    controller: 'field.numberfield',
    viewModel: {
        type: 'field.numberfield'
    },
    fieldCls: 'grey-bg',
    allowBlank: false,
    allowOnlyWhitespace: false,
    hideTrigger: true,
    mouseWheelEnabled: false,
    allowExponential: false,
    decimalPrecision: 4,

    listeners: {
        render: 'onNumberfieldRender'
    },

    initConfig: function(instanceConfig) {
        var me = this,
            config = {}

        me.overrideConfig(config)

        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig)

        }
        return me.callParent([config])

    },

    overrideConfig: function(config) {
        var uiSettings = RolandKioskPrint.AppData.getUiSettingsData() || {}

        config.decimalSeparator = uiSettings.decimalSeparator || '.'


        return config

    }

})
